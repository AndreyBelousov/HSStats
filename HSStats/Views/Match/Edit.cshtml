@model HSStats.Models.Match

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Match</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.MatchID)
        @Html.HiddenFor(model => model.MatchTime)
        @Html.HiddenFor(model => model.ArenaID)

        @if(Model.Mode != HSStats.Models.Modes.Arena)
        { 
            <div class="form-group">
                @Html.LabelFor(model => model.Mode, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Mode)
                    @Html.ValidationMessageFor(model => model.Mode)
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.MyHero, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.MyHero)
                    @Html.ValidationMessageFor(model => model.MyHero)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model=> model.Mode)
            @Html.HiddenFor(model => model.MyHero)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.OpponentHero, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.OpponentHero)
                @Html.ValidationMessageFor(model => model.OpponentHero)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Turn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Turn)
                @Html.ValidationMessageFor(model => model.Turn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Result, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Result)
                @Html.ValidationMessageFor(model => model.Result)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatchTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.MatchTime)
            </div>        
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index") |
    @if ( Model.ArenaID != null )
    {
        @Html.ActionLink("Back to arena details", "Details", "Arena", new { id = Model.ArenaID }, null)
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
